!function(t){"use strict";var e=function(t,e,r,i,o,n,a){o.theme("default").primaryPalette("pink",{"default":"500","hue-1":"200","hue-2":"800","hue-3":"A100"}).accentPalette("blue",{}).warnPalette("red"),i.html5Mode(!1).hashPrefix("!");var l="",c="/welcome";t.state("byt",{url:l,"abstract":!0}).state("byt.welcome",{url:c,templateUrl:"welcome/wlc.tpl.html",controller:"WlcController"}).state("byt.aggloList",{url:"/cities",templateUrl:"agglo-list/agglo-list.tpl.html",controller:"AggloListController"}).state("byt.aggloItem",{url:"/cities/:agglo_inter_code","abstract":!0,templateUrl:"agglo-item/agglo-item.tpl.html",controller:"AggloItemController",resolve:{q_agglo_inter_code:["$stateParams",function(t){return console.log("some resolve"),t.agglo_inter_code}]}}).state("byt.about",{url:"/about",templateUrl:"about/about.tpl.html",controller:"AboutController"}),e.otherwise(l+c),a.setPrefix("ppa").setStorageType("localStorage")};t.module("myApp.appConfig",["ui.router","ngMaterial","LocalStorageModule","myApp.templateFactory","myApp.ToolbarController","myApp.WlcController","myApp.AggloItemController","myApp.AggloListController","myApp.AboutController","anguphantom"]).config(["$stateProvider","$urlRouterProvider","$httpProvider","$locationProvider","$mdThemingProvider","$mdIconProvider","localStorageServiceProvider",e])}(window.angular),function(t){"use strict";var e=function(){};t.module("myApp",["myApp.appConfig"]).run([e]);var r=function(){t.bootstrap(document,["myApp"])};t.element(document).ready(function(){window.cordova?document.addEventListener("deviceready",r,!1):r()})}(window.angular),window.onerror=function(){"use strict";alert("Непредвиденная ошибка")},function(t){"use strict";var e=function(t){t.state("byt.aggloItem.specList",{url:"/specs",views:{aggloItemContent:{templateUrl:"agglo-item/spec-list/spec-list.tpl.html",controller:"SpecListController"}}}).state("byt.aggloItem.specItem",{url:"/specs/:spec_id","abstract":!0,views:{aggloItemContent:{templateUrl:"agglo-item/spec-item/spec-item.tpl.html",controller:"SpecItemController"}},resolve:{q_spec_id:["$q","$stateParams","rubricRepo",function(t,e,r){var i=e.spec_id,o=t.defer();return r.getIds().indexOf(i)>=0?o.resolve(i):o.reject("param "+i+" is not supported"),o.promise}]}}).state("byt.aggloItem.specItem.salonList",{url:"/salons",views:{specItemContent:{templateUrl:"agglo-item/spec-item/salon-list/salon-list.tpl.html",controller:"SalonListController"}}}).state("byt.aggloItem.specItem.rubricItem",{url:"/rubrics/:rubric_id",views:{specItemContent:{templateUrl:"agglo-item/spec-item/rubric-item/rubric-item.tpl.html",controller:"RubricItemController"}},resolve:{q_rubric_id:["$stateParams",function(t){return t.rubric_id}]}})};t.module("myApp.aggloItemConfig",["myApp.SpecListController","myApp.SpecItemController","myApp.SalonListController","myApp.RubricItemController"]).config(["$stateProvider",e])}(window.angular),function(t){"use strict";var e=function(t,e,r,i,o,n,a,l,c){t.cur_agglo=null;var s=function(){var e=i.calcByInterCode(c);e?t.cur_agglo=e:r.go("byt.welcome")};i.retrieveData().then(s)["catch"](function(e){console.log("aggloRetrieveError"),console.log(e),l.error("Технические неполадки: не удалось подключиться к серверу."),t.htmlReady()}),e(function(){t.is_prg=!0},500)};t.module("myApp.AggloItemController",["myApp.aggloItemConfig","myApp.aggloRepo","myApp.rubricRepo","myApp.servRepo","myApp.masterRepo","myApp.notifFactory"]).controller("AggloItemController",["$scope","$timeout","$state","aggloRepo","rubricRepo","servRepo","masterRepo","notifFactory","q_agglo_inter_code",e])}(window.angular),function(t){"use strict";var e=function(t,e,r,i,o){o.setTitle("Выбор города"),o.setPrevHref(e.href("byt.welcome")),t.agglo_data=i.getData(),i.retrieveData()["catch"](function(t){r.error("Технические неполадки: не удалось подключиться к серверу."),console.log("aggloRetrieveError",t)})["finally"](function(){t.htmlReady()})};t.module("myApp.AggloListController",["myApp.notifFactory","myApp.aggloRepo","myApp.siteRepo"]).controller("AggloListController",["$scope","$state","notifFactory","aggloRepo","siteRepo",e])}(window.angular),function(t){"use strict";var e=function(t,e,r){r.setTitle("О проекте"),r.setPrevHref(e.href("byt.welcome")),t.htmlReady()};t.module("myApp.AboutController",["myApp.siteRepo"]).controller("AboutController",["$scope","$state","siteRepo",e])}(window.angular),function(t){"use strict";var e=function(t,e,r){t.msg_body=r,t.hideDialog=function(){e.hide()}};t.module("myApp.AlrtController",["ngMaterial"]).controller("AlrtController",["$scope","$mdDialog","msg_body",e])}(window.angular),function(t){"use strict";var e=function(t,e,r,i,o){t.site_data=i.getData(),t.scrollToTop=function(){e.hash("top_block"),r()},t.scroll_data=o.getData()};t.module("myApp.ToolbarController",["myApp.siteRepo","myApp.scrollRepo"]).controller("ToolbarController",["$scope","$location","$anchorScroll","siteRepo","scrollRepo",e])}(window.angular),function(t){"use strict";var e=function(t,e,r,i,o,n,a,l,c,s,d){d.setTitle("МисКра"),d.setPrevHref(""),t.is_socnet=window.IS_SOCNET;var m=function(){n.error("Не удалось определить город. Попробуйте выбрать вручную")};t.defineSocCity=function(){window.getSocCity?window.getSocCity(function(t){if(t){var e=l.findElemByProp(a.getData().arr_geo_agglo,"local_name",t);if(!e)return void n.error("Ваше местоположение "+t+" не поддерживается приложением");u(e)}else m()}):m()},t.loc_data=c.getData(),t.perm_data=s.getData();var u=function(t){e.go("byt.aggloItem.specList",{agglo_inter_code:t.inter_code})},p=function(){var e=c.getData().coords;a.calcAggloByCoords(e.lat,e.lng).then(function(e){e?(s.saveLocationPermission(),u(e)):(n.error("Местоположение не поддерживается сервисом. Попробуйте выбрать вручную."),t.htmlReady())})};t.defineLocation=function(){c.retrieveFromDevice().then(p)["catch"](function(e){n.error(e),t.htmlReady()})},t.cleanLocationPermission=function(){s.cleanLocationPermission()};var g=function(){s.checkLocationPermission().then(function(e){e,t.htmlReady()})};a.retrieveData().then(g)["catch"](function(e){n.error("Технические неполадки: не удалось подключиться к серверу."),console.log("aggloRetrieveError",e),t.htmlReady()}),o(function(){t.is_prg=!0},500)};t.module("myApp.WlcController",["ui.router","myApp.notifFactory","myApp.aggloRepo","myApp.hprFactory","myApp.locRepo","myApp.permRepo","myApp.siteRepo"]).controller("WlcController",["$scope","$state","$log","$http","$timeout","notifFactory","aggloRepo","hprFactory","locRepo","permRepo","siteRepo",e])}(window.angular),function(t){"use strict";var e=function(t,e,r,i,o,n,a,l){a.setTitle(t.cur_agglo.local_name),a.setPrevHref(r.href("byt.welcome")),t.rubric_data=i.getData();var c=n.calcByInterCode(l);i.retrieveData(c.id,"ru")["catch"](function(t){o.error("Ошибка загрузки категорий"),console.log(t)})["finally"](function(){t.htmlReady()}),e(function(){t.is_prg=!0},500)};t.module("myApp.SpecListController",["myApp.rubricRepo","myApp.notifFactory","myApp.aggloRepo","myApp.siteRepo"]).controller("SpecListController",["$scope","$timeout","$state","rubricRepo","notifFactory","aggloRepo","siteRepo","q_agglo_inter_code",e])}(window.angular),function(t){"use strict";var e=function(t,e,r,i,o,n){t.cur_spec=null;var a=function(){t.cur_spec=o.calcServGroupById(n)};t.is_show_rubrics="byt.aggloItem.specItem.rubricItem"===e.$current.name,t.onTabSelected=function(r){e.go("byt.aggloItem.specItem.rubricItem",{agglo_inter_code:t.cur_agglo.inter_code,spec_id:t.cur_spec.id,rubric_id:r})},o.retrieveData(t.cur_agglo.id,"ru").then(a)["catch"](function(e){i.error("Ошибка загрузки категорий"),console.log(e),t.htmlReady()}),r(function(){t.is_prg=!0},500)};t.module("myApp.SpecItemController",["myApp.notifFactory","myApp.rubricRepo"]).controller("SpecItemController",["$scope","$state","$timeout","notifFactory","rubricRepo","q_spec_id",e])}(window.angular),function(t,e){"use strict";var r=function(t,r){var i={key:e.APICOM_KEY,version:e.APICOM_VERSION},o=function(t){return 200!==t.status?r.reject("Ошибка запроса"):t.data?"404"===t.data.response_code?r.reject("Не найдено информации по салону"):"200"!==t.data.response_code?r.reject("Ошибка при получении информации о салоне"):(window.DG&&window.DG.apitracker.regBC(t.data.register_bc_url),t.data):r.reject("Ошибка запроса")},n=function(r,n){return i.id=r,i.hash=n,t({method:"GET",url:e.APICOM_ENDPOINT+"/profile",params:i}).then(o)};return{loadFirm:n}};t.module("myApp.firmItemFactory",[]).factory("firmItemFactory",["$http","$q",r])}(window.angular,window.APPCONF),function(t,e){"use strict";var r=function(t,r){var i={key:e.APICOM_KEY,version:e.APICOM_VERSION,sort:"distance",page:1,pagesize:50,what:""},o=function(t){return 200!==t.status?r.reject("Ошибка запроса"):t.data?"404"===t.data.response_code?{total:0,markers:[]}:"200"!==t.data.response_code?r.reject("Ошибка запроса"):{total:parseInt(t.data.total,10),result:t.data.result}:r.reject("Ошибка запроса")},n=function(r,n,a,l){return i.what=r,i.point=n.toString()+","+a.toString(),i.radius=l,t({method:"GET",url:e.APICOM_ENDPOINT+"/search",params:i}).then(o)};return{loadFirmsByPoint:n}};t.module("myApp.firmListFactory",[]).factory("firmListFactory",["$http","$q",r])}(window.angular,window.APPCONF),function(t){"use strict";var e=function(t,e){var r=function(){var r=t.defer();return"geolocation"in navigator?navigator.geolocation.getCurrentPosition(function(t){r.resolve(t.coords)},function(t){e.log("geoloc error",t),r.reject("Не удалось получить текущее местоположение")},{timeout:1e4}):r.reject("Не удалось получить текущее местоположение"),r.promise};return{getCurCoords:r}};t.module("myApp.geolocFactory",[]).factory("geolocFactory",["$q","$log",e])}(window.angular),function(t){"use strict";return t.module("anguphantom",[]).run(["$rootScope",function(t){var e=function(){"function"==typeof window.callPhantom&&(window.callPhantom({appResult:"clientFinished"}),console.log("callPhantomFromClient")),console.log("htmlReady")},r=function(){window.setTimeout(e,0)};t.htmlReady=function(){t.$evalAsync(r)}}])}(window.angular),function(t){"use strict";t.module("myApp.drct",["myApp.scrollRepo"]).directive("onFinishRender",["$timeout",function(t){return{restrict:"A",link:function(e,r,i){e.$last===!0&&(console.log("onFinishRender:last",e.$index),t(function(){e.$emit(i.onFinishRender)}))}}}]).directive("scrollWatcher",["scrollRepo",function(t){return function(e,r){var i=r[0];r.bind("scroll",function(){t.setPos(i.scrollTop),e.$apply()})}}])}(window.angular),function(t,e){"use strict";var r=function(t){t=t.substr(9,t.length-11);var e=t.split(",");return e.map(function(t){return{latitude:parseFloat(t.split(" ")[1]),longitude:parseFloat(t.split(" ")[0])}})},i=function(){var i=function(t,i,o){return e.isPointInside({latitude:i,longitude:o},r(t))},o=function(e,r,o){var n;return t.forEach(e,function(t){n||i(t.extent,r,o)&&(n=t)}),n};return{isPointInsideWkt:i,convertWktToArr:r,findAggloByCoords:o}};t.module("myApp.geoHelper",[]).factory("geoHelper",[i])}(window.angular,window.geolib),function(t){"use strict";var e=function(){function t(t,e){return Math.floor(Math.random()*(e-t+1)+t)}var e=function(t,e){return 0===t.length?!0:0===e.length?!1:(t.sort(),e.sort(),("|"+e.join("|")+"|").indexOf("|"+t.join("|")+"|")>=0)},r=function(t,e,r){var i=t.map(function(t){return t[e]}).indexOf(r);return t[i]},i=function(t){t=t.substr(6,t.length-7);var e=t.split(" ");return{longitude:parseFloat(e[0]),latitude:parseFloat(e[1])}};return{findElemByProp:r,isArrInArr:e,randomIntFromInterval:t,coordsFromWktPoint:i}};t.module("myApp.hprFactory",[]).factory("hprFactory",[e])}(window.angular),function(t){"use strict";function e(e,r,i){function o(e,r){var i=!0;return t.forEach(e,function(t,e){r[e]!==t&&(i=!1)}),i}function n(n,a,l){var c=r.defer(),s=i.get(n);if(s){var d=t.fromJson(s),m=d.filter(t.bind(null,o,a));l?c.resolve(m):m.length>1?c.reject("notOnlyOne"):c.resolve(m[0])}else e.log("tbl not found",s,n),c.resolve(l?[]:null);return c.promise}function a(e,o){var n=r.defer(),a=i.get(e),l=a?t.fromJson(a):[],c=l.filter(function(t,e){return t.id===o.id?(l[e]=o,!0):!1})[0];return c||l.push(o),i.set(e,t.toJson(l)),n.resolve(o),n.promise}function l(e,n){var a=r.defer(),l=i.get(e);if(l){var c=t.fromJson(l);t.forEach(c,function(t,e){o(n,t)&&c.splice(e,1)}),i.set(e,t.fromJson(c))}return a.resolve(),a.promise}return{writeToStorage:a,readFromStorage:n,delFromStorage:l}}t.module("myApp.ldbHelper",["LocalStorageModule"]).factory("ldbHelper",["$log","$q","localStorageService",e])}(window.angular),function(t,e){"use strict";function r(t){for(var e,r,i,o,n=0;n<t.length;n++){var a=t[n];"moscow"===a.inter_code?(e=a,t.splice(n--,1)):"spb"===a.inter_code?(r=a,t.splice(n--,1)):"novosibirsk"===a.inter_code?(i=a,t.splice(n--,1)):"krasnodar"===a.inter_code&&(o=a,t.splice(n--,1))}t.splice(0,0,o),t.splice(0,0,i),t.splice(0,0,r),t.splice(0,0,e)}var i={arr_geo_agglo:[],is_loaded:!1},o=function(o,n,a){var l=function(e){i.arr_geo_agglo.length=0;var o=e.data.arr_geo_agglo;r(o),t.extend(i.arr_geo_agglo,o),i.is_loaded=!0},c=function(t,e){return e.inter_code===t};return{getData:function(){return i},retrieveData:function(){if(console.log("try: retrieving agglos"),i.is_loaded){var t=o.defer();return t.resolve(),t.promise}var r={method:"GET",url:e.APIMAS_ENDPOINT+"/territory/get-agglos"};return n(r).then(l)},calcByInterCode:function(e){return i.arr_geo_agglo.filter(t.bind(null,c,e))[0]},calcAggloByCoords:function(t,e){var r=a.findAggloByCoords(i.arr_geo_agglo,t,e),n=o.defer();return n.resolve(r),n.promise}}};t.module("myApp.aggloRepo",["myApp.geoHelper"]).factory("aggloRepo",["$q","$http","geoHelper",o])}(window.angular,window.APPCONF),function(t){"use strict";var e={cur_firm:null},r=function(t){return{getData:function(){return e},retrieveData:function(r,i){return t.loadFirm(r,i).then(function(t){e.cur_firm=t})}}};t.module("myApp.firmItemRepo",["myApp.firmItemFactory"]).factory("firmItemRepo",["firmItemFactory",r])}(window.angular),function(t){"use strict";var e={map_markers:{},total:0},r={hair:{name:"Парикмахерские"},cosmetic:{name:"Косметические услуги"},nail:{name:"Ногтевые студии"},makeup:{name:"Услуги визажиста"},massage:{name:"Услуги массажиста"}},i=function(t,e){var r='<md-button class="md-accent" style="margin:0" onclick="window.showFirmInfo(event,'+e.id+",'"+e.hash+"');\">Подробнее</md-button>",i="";e.micro_comment&&(i='<div><small class="md-caption">'+e.micro_comment+"</small></div>",e.fas_warning&&(i+='<div><small class="md-caption" style="color: #bb0000">'+e.fas_warning+"</small></div>"),i+="</div>");var o='<md-content style="background-color: transparent; font-size: 0.9rem"><div style="margin-bottom:2px"><strong>'+e.name+"</strong></div><div>"+e.address+"</div><md-divider></md-divider>"+i+'<div style="text-align: right">'+r+"</div></md-content>";t[e.id]={lat:parseFloat(e.lat),lng:parseFloat(e.lon),message:o}},o=function(e){var r={};return t.forEach(e,t.bind(null,i,r)),r},n=function(t){return{getData:function(){return e},clearData:function(){e.map_markers={}},retrieveData:function(i,n,a){var l=function(t){e.map_markers=o(t.result),e.total=t.total};return t.loadFirmsByPoint(r[a].name,i,n,3e3).then(l)}}};t.module("myApp.firmListRepo",["myApp.firmListFactory"]).factory("firmListRepo",["firmListFactory",n])}(window.angular),function(t){"use strict";var e={src_url:null},r=function(){return{getData:function(){return e},setUrl:function(t){e.src_url=t}}};t.module("myApp.fullRepo",[]).factory("fullRepo",[r])}(window.angular),function(t){"use strict";var e={is_defined:!1,is_device_progress:!1,coords:{lat:null,lng:null}},r=function(t,r){return{getData:function(){return e},retrieveFromDevice:function(){if(e.is_defined){var i=t.defer();return i.resolve(),i.promise}return e.is_device_progress=!0,r.getCurCoords().then(function(t){e.coords.lat=t.latitude,e.coords.lng=t.longitude,e.is_defined=!0})["finally"](function(){e.is_device_progress=!1})}}};t.module("myApp.locRepo",["myApp.geolocFactory"]).factory("locRepo",["$q","geolocFactory",r])}(window.angular),function(t,e){"use strict";var r={slc_master:null,is_in_progress:!1},i=function(t,i){var o=function(t){r.slc_master=t},n=function(){r.slc_master=null},a=function(n){var a=t.defer();r.is_in_progress=!0;var l={method:"GET",url:e.APIMAS_ENDPOINT+"/master/get-profile2",params:{id:n}};return i(l).then(function(t){return t.data?(o(t.data),t.data):a.reject("Мастер не найден")})["finally"](function(){r.is_in_progress=!1})};return{getData:function(){return r},cleanMaster:n,setMaster:o,retrieveMaster:a}};t.module("myApp.masterRepo",[]).factory("masterRepo",["$q","$http",i])}(window.angular,window.APPCONF),function(t){"use strict";var e="location_permission",r=null,i={is_perm_checked:!1},o=function(t,o){var n=function(){r=!0,o.writeToStorage(e,{id:0,is_allowed:!0})},a=function(t){return i.is_perm_checked=!0,r=t&&t.is_allowed===!0?!0:!1};return{getData:function(){return i},cleanLocationPermission:function(){r=!1,o.delFromStorage(e,{id:0})},saveLocationPermission:n,checkLocationPermission:function(){if(i.is_perm_checked){var n=t.defer();return n.resolve(r),n.promise}return o.readFromStorage(e,{id:0},!1).then(a)}}};t.module("myApp.permRepo",["myApp.ldbHelper"]).factory("permRepo",["$q","ldbHelper",o])}(window.angular),function(t,e){"use strict";var r={arr_serv_group:[{id:"hair",name:"Услуги парикмахера",arr_serv_rubric_stat:[],count_serv_rubric:0,sum_master_serv:0},{id:"nail",name:"Уход за ногтями",arr_serv_rubric_stat:[],count_serv_rubric:0,sum_master_serv:0},{id:"makeup",name:"Услуги визажиста",arr_serv_rubric_stat:[],count_serv_rubric:0,sum_master_serv:0},{id:"cosmetic",name:"Услуги косметолога",arr_serv_rubric_stat:[],count_serv_rubric:0,sum_master_serv:0}],lang:"ru",geo_district_id:null,is_loaded:!1},i=function(i,o,n){var a=function(e,r){var i=0,o=e.filter(function(t){return t.serv_rubric.serv_group_id===r.id?(i+=t.count_master_serv,!0):!1});o.sort(function(t,e){return t.count_master_serv>e.count_master_serv?-1:t.count_master_serv<e.count_master_serv?1:0}),r.arr_serv_rubric_stat.length=0,t.extend(r.arr_serv_rubric_stat,o),r.count_serv_rubric=o.length,r.sum_master_serv=i},l=function(e){r.arr_serv_group.forEach(t.bind(null,a,e.data.arr_serv_rubric_stat)),r.geo_district_id=e.data.geo_district_id,r.is_loaded=!0},c=function(t,n){if(r.is_loaded&&r.geo_district_id===t){var a=i.defer();return a.resolve(),a.promise}r.is_loaded=!1;var c=r.arr_serv_group.map(function(t){return t.id}),s={method:"GET",url:e.APIMAS_ENDPOINT+"/rubric/get-group-stat",params:{ids_serv_group:c.join("__"),geo_district_id:t,lang:n}};return o(s).then(l)},s=function(t){return n.findElemByProp(r.arr_serv_group,"id",t)};return{getIds:function(){return r.arr_serv_group.map(function(t){return t.id})},getData:function(){return r},retrieveData:c,calcServGroupById:s,calcServRubricStat:function(t,e){return t.arr_serv_rubric_stat.filter(function(t){return t.serv_rubric.id===e})[0]}}};t.module("myApp.rubricRepo",["myApp.hprFactory"]).factory("rubricRepo",["$q","$http","hprFactory",i])}(window.angular,window.APPCONF),function(t){"use strict";var e={pos:0},r=function(){return{setPos:function(t){e.pos=t},getData:function(){return e}}};t.module("myApp.scrollRepo",[]).factory("scrollRepo",[r])}(window.angular),function(t,e){"use strict";var r={arr_serv_info:[],limit:null,start_id:null,next_start_id:null,is_more_exist:!1},i=function(t,i){var o=function(){r.arr_serv_info.length=0,r.limit=null,r.start_id=null,r.next_start_id=null,r.is_more_exist=!1},n=function(t){var e=t.data;e.arr_serv_info.forEach(function(t){r.arr_serv_info.push(t)}),r.limit=parseInt(e.limit,10),r.start_id=e.start_id,r.next_start_id=e.next_start_id,r.is_more_exist=r.limit===e.arr_serv_info.length?!0:!1},a=function(t,a){var l={method:"GET",url:e.APIMAS_ENDPOINT+"/master/get-serv-scope2",params:{ids_serv_rubric:t.join("__"),geo_district_id:a,is_out_only:!1,start_id:r.next_start_id,limit:16}};return i(l).then(function(t){r.next_start_id||o(),n(t)})};return{getData:function(){return r},retrieveData:a,cleanArrServInfo:o}};t.module("myApp.servRepo",[]).factory("servRepo",["$q","$http",i])}(window.angular,window.APPCONF),function(t){"use strict";var e=function(){var t={ttl:"Default",prev_href:""};return{setTitle:function(e){t.ttl=e},setPrevHref:function(e){t.prev_href=e},getData:function(){return t}}};t.module("myApp.siteRepo",[]).factory("siteRepo",[e])}(window.angular),function(t){"use strict";function e(t){var e=function(e){t.show({templateUrl:"alrt/alrt.tpl.html",controller:"AlrtController",clickOutsideToClose:!0,parent:r,locals:{msg_body:e}})};return{error:function(t){e(t)}}}var r=t.element(document.body);t.module("myApp.notifFactory",["ngMaterial","myApp.AlrtController"]).factory("notifFactory",["$mdDialog",e])}(window.angular),function(t){"use strict";var e=function(t,e,r,i){t.hideDialog=function(){e.hide()},t.is_loaded=!1,r.retrieveMaster(i).then(function(){t.master_data=r.getData()})["finally"](function(){t.is_loaded=!0})};t.module("myApp.MasterDetailController",["myApp.masterRepo"]).controller("MasterDetailController",["$scope","$mdDialog","masterRepo","master_profile_id",e])}(window.angular),function(t){"use strict";var e=function(t,e,r,i,o,n){o.setPrevHref(e.href("byt.aggloItem.specList",{agglo_inter_code:t.cur_agglo.inter_code})),o.setTitle(t.cur_spec.name),t.cur_rubric_stat=i.calcServRubricStat(t.cur_spec,n)};t.module("myApp.RubricItemController",["myApp.drct","myApp.ServListController","myApp.notifFactory","myApp.rubricRepo","myApp.siteRepo"]).controller("RubricItemController",["$scope","$state","notifFactory","rubricRepo","siteRepo","q_rubric_id",e])}(window.angular),function(t){"use strict";var e=t.element(document.body),r=function(t,r,i,o,n){t.showMasterInfo=function(t,r){i.show({clickOutsideToClose:!0,parent:e,controller:"MasterDetailController",templateUrl:"agglo-item/spec-item/rubric-item/master-detail.tpl.html",targetEvent:t,locals:{master_profile_id:r}})},t.$on("servListRepeatFinished",function(){t.htmlReady()}),t.plusData=function(){t.is_more_loaded=!1,n.retrieveData([t.cur_rubric_stat.serv_rubric.id],t.cur_agglo.id)["finally"](function(){t.is_more_loaded=!0})},n.cleanArrServInfo(),t.serv_data=n.getData(),n.retrieveData([t.cur_rubric_stat.serv_rubric.id],t.cur_agglo.id).then(function(){})["catch"](function(e){o.error("Ошибка загрузки услуг. Попробуйте позже."),console.log("retrieveServError",e),t.htmlReady()})["finally"](function(){t.is_serv_loaded=!0,t.is_more_loaded=!0})};t.module("myApp.ServListController",["myApp.drct","myApp.MasterDetailController","myApp.notifFactory","myApp.servRepo"]).controller("ServListController",["$scope","$state","$mdDialog","notifFactory","servRepo",r])}(window.angular),function(t){"use strict";var e=function(t,e,r){t.firm_data=r.getData(),t.hideDialog=function(){e.hide()}};t.module("myApp.FirmDetailController",["myApp.firmItemRepo"]).controller("FirmDetailController",["$scope","$mdDialog","firmItemRepo",e])}(window.angular),function(t,e){"use strict";e.Icon.Default.imagePath="./images/";var r=t.element(document.body),i=function(e,i,o,n,a,l,c,s,d,m,u){m.setPrevHref(i.href("byt.aggloItem.specList",{agglo_inter_code:e.cur_agglo.inter_code})),m.setTitle(e.cur_spec.name),e.firm_list_data=l.getData(),e.map_defaults={tileLayer:"https:////{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",tileLayerOptions:{detectRetina:!0,reuseTiles:!0,attribution:'© <a target="_blank" href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors | <a target="_blank" href="http://api.2gis.ru/">Предоставлено 2ГИС</a>'},zoomControlPosition:"topleft"},e.map_events={map:{enable:["moveend"],logic:"emit"}},e.map_paths={p1:{weight:2,stroke:!0,opacity:.5,fillOpacity:0,clickable:!1,color:"green",latlngs:[40,40],radius:3e3,type:"circle"}},e.zurpos={lng:null,lat:null,zoom:null};var p=!0,g=function(){n.error("Ошибка загрузки салонов. Попробуйте позже.")},f=function(t){t&&e.htmlReady()};e.$on("leafletDirectiveMap.moveend",function(r){var i=r.targetScope.center,o=!0;if(e.zurpos.lng){var a=Math.max(Math.abs(i.lng-e.zurpos.lng),Math.abs(i.lat-e.zurpos.lat));.0015>a&&(o=!1,console.log("delta",a))}if(e.zurpos.lng=i.lng,e.zurpos.lat=i.lat,e.zurpos.zoom=i.zoom,i.zoom<14)l.clearData(),e.map_paths.p1.radius=0;else if(o){var c=e.cur_spec.id;c?(l.retrieveData(e.zurpos.lng,e.zurpos.lat,c)["catch"](t.bind(null,g))["finally"](t.bind(null,f,p)),e.map_paths.p1.latlngs=[i.lat,i.lng],e.map_paths.p1.radius=3e3):n.error("Для показа салонов необходимо выбрать рубрику")}p=!1});var v=null;e.$on("leafletDirectiveMarker.popupopen",function(t,e){v=e.leafletEvent.popup._source});var _=function(t){o.show({clickOutsideToClose:!0,parent:r,controller:"FirmDetailController",templateUrl:"agglo-item/spec-item/salon-list/firm-detail.tpl.html",targetEvent:t,onComplete:function(){v&&v.closePopup()}})},y=function(t){n.error("Ошибка загрузки информации о компании. Попробуйте позже."),console.log("errFirm",t)};window.showFirmInfo=function(e,r,i){u.retrieveData(r,i).then(t.bind(null,_,e),y)},e.perm_data=c.getData(),e.loc_data=s.getData(),e.map_center={lat:null,lng:null,zoom:14};var h=function(t,r){e.map_center.lat=t,e.map_center.lng=r},b=function(){var t=a.coordsFromWktPoint(e.cur_agglo.centroid);h(t.latitude,t.longitude),console.log("center coords")},w=function(){var t=s.getData().coords;d.calcAggloByCoords(t.lat,t.lng).then(function(r){r?(console.log("tmpAgglo",r),r.id===e.cur_agglo.id?(h(t.lat,t.lng),console.log("device coords")):b()):b()})},A=function(t){console.log("handleLocPerm"),t?s.retrieveFromDevice().then(w)["catch"](b):b()};console.log("handlelocperm"),c.checkLocationPermission().then(A)};t.module("myApp.SalonListController",["ngSanitize","leaflet-directive","ngMaterial","myApp.notifFactory","myApp.hprFactory","myApp.firmListRepo","myApp.permRepo","myApp.locRepo","myApp.aggloRepo","myApp.siteRepo","myApp.FirmDetailController","myApp.firmItemRepo"]).controller("SalonListController",["$scope","$state","$mdDialog","notifFactory","hprFactory","firmListRepo","permRepo","locRepo","aggloRepo","siteRepo","firmItemRepo",i])}(window.angular,window.L),angular.module("myApp.templateFactory",[]).run(["$templateCache",function(t){t.put("about/about.tpl.html",'<div layout-margin="" layout-padding=""><p>Проект предоставляет услуги по поиску мастеров и салонов красоты:</p><ul class="list"><li class="item"><strong>Парикмахер</strong><ul><li>Свадебные прически</li><li>Наращивание волос</li><li>Стрижка</li><li>...</li></ul></li><li class="item"><strong>Визажист</strong><ul><li>Вечерний макияж</li><li>Наращивание ресниц</li><li>Свадебный макияж</li><li>...</li></ul></li><li class="item"><strong>Уход за ногтями</strong><ul><li>Маникюр</li><li>Ногтевой дизайн</li><li>Шеллак</li><li>...</li></ul></li><li class="item"><strong>Косметолог</strong><ul><li>Чистка лица</li><li>Эпиляция</li><li>Татуаж</li><li>...</li></ul></li></ul><p>Варианты поиска:<ul><li>по карте города: отображение салонов красоты</li><li>по портфолио: фотографиям работ</li></ul></p><p>Проект поддерживает большинство крупных и средних городов по территории РФ и некоторые зарубежные города.</p></div>'),t.put("agglo-item/agglo-item.tpl.html",'<div class="full-height"><div ng-if="is_prg"><div ng-if="!cur_agglo"><div layout="column" layout-align="center center"><md-progress-circular md-mode="indeterminate" class="md-hue-3"></md-progress-circular>загрузка локации...</div></div></div><div class="full-height" ng-if="cur_agglo"><ui-view class="full-height" name="aggloItemContent"></ui-view></div></div>'),t.put("agglo-list/agglo-list.tpl.html",'<md-content layout-margin="" md-scroll-y=""><div layout="row"><div flex="" offset-gt-md="25" flex-gt-md="50"><div ng-if="agglo_data.is_loaded"><md-input-container md-no-float="" style="margin: 16px 16px 0 16px"><md-icon md-font-icon="fa fa-search fa-2x"></md-icon><input type="text" placeholder="Найти город" ng-model="agglo_search.local_name"></md-input-container><md-list><md-list-item ng-repeat="agg in agglo_data.arr_geo_agglo | filter:agglo_search" style="display:inline-block"><md-button class="md-accent" style="text-align: left" aria-label="{{agg.local_name}}" ui-sref="byt.aggloItem.specList({agglo_inter_code:agg.inter_code})"><span ng-bind="agg.local_name"></span></md-button></md-list-item></md-list></div></div></div></md-content>'),t.put("alrt/alrt.tpl.html",'<md-dialog aria-label="Уведомление"><md-dialog-content><p ng-bind="msg_body"></p></md-dialog-content><div class="md-actions"><md-button class="md-accent" ng-click="hideDialog()">Понятно</md-button></div></md-dialog>'),t.put("toolbar/toolbar.tpl.html",'<div class="md-toolbar-tools" ng-controller="ToolbarController"><md-button ng-href="{{site_data.prev_href}}" class="md-icon-button" aria-label="назад" title="назад" ng-if="site_data.prev_href"><md-icon md-font-icon="fa fa-arrow-circle-left fa-2x" style="color:white"></md-icon></md-button><md-button class="md-icon-button" ui-sref="byt.welcome" aria-label="главная" ng-if="!site_data.prev_href"><md-icon md-font-icon="fa fa-home fa-2x" style="color:white"></md-icon></md-button><h2><span ng-bind="site_data.ttl"></span></h2><span flex=""></span><md-button ng-click="scrollToTop()" aria-label="наверх" ng-show="scroll_data.pos > 300">наверх</md-button></div>'),t.put("welcome/no-location.tpl.html",'<md-card flex="" class="md-whiteframe-z2"><md-card-content><div>моё местоположение</div><md-divider></md-divider><div layout="row" layout-sm="column" layout-align="space-around center" style="margin-top: 12px"><div layout="column" layout-align="center center"><md-button class="md-fab md-primary" ng-click="defineLocation()" title="приблизительные координаты" aria-label="автоопределение"><md-icon md-font-icon="fa fa-street-view fa-2x"></md-icon></md-button><div><small>автоопределение</small></div></div><div layout="column" layout-align="center center"><md-button class="md-primary md-fab" ui-sref="byt.aggloList" ng-click="cleanLocationPermission();" title="центр города" aria-label="вручную"><md-icon md-font-icon="fa fa-list-ul fa-2x"></md-icon></md-button><div><small>выбрать вручную</small></div></div><div layout="column" layout-align="center center" ng-if="is_socnet"><md-button class="md-fab md-primary" ng-click="defineSocCity()" title="центр города" aria-label="из социальной сети"><md-icon md-font-icon="fa fa-vk fa-2x"></md-icon></md-button><div><small>из социальной сети</small></div></div></div></md-card-content></md-card>'),t.put("welcome/wlc.tpl.html",'<md-content md-scroll-y=""><div layout="row"><div flex="" offset-gt-md="25" flex-gt-md="50"><h4 class="md-subhead" style="margin: 20px">Поиск мастеров и салонов красоты: открытые контактные данные, карта с ближайшими салонами, портфолио мастеров и другое <a ui-sref="byt.about">подробнее</a><br><br>Вы - мастер? Оставьте заявку на подключение в <a target="_blank" href="//vk.com/topic-92002771_31699472">группе приложения</a>.</h4><div ng-if="is_prg"><div ng-if="!perm_data.is_perm_checked"><div layout="column" layout-align="center center"><md-progress-circular md-mode="indeterminate" class="md-hue-3"></md-progress-circular>загрузка</div></div></div><div ng-if="perm_data.is_perm_checked"><ng-include src="\'welcome/no-location.tpl.html\'"></ng-include></div></div></div></md-content>'),t.put("agglo-item/spec-list/serv-groups.tpl.html",'<div layout-gt-sm="row" layout-sm="column" layout-fill="" layout-wrap=""><md-card flex="" class="md-whiteframe-z3" style="min-width:240px;" ng-repeat="grp in rubric_data.arr_serv_group"><md-card-content><h2 class="md-title" ng-bind="grp.name"></h2><p ng-show="grp.arr_serv_rubric_stat.length > 0"><div ng-repeat="rbrStat in grp.arr_serv_rubric_stat|limitTo:5|limitTo:-4">{{rbrStat.serv_rubric.name}} <span ng-show="$index === 3">...</span></div></p><div class="md-actions" layout="row" layout-align="end center"><md-button class="md-accent" ui-sref="byt.aggloItem.specItem.salonList({agglo_inter_code: cur_agglo.inter_code, spec_id: grp.id})">на карте</md-button><md-button class="md-accent" ui-sref="byt.aggloItem.specItem.rubricItem({agglo_inter_code: cur_agglo.inter_code, spec_id: grp.id, rubric_id: grp.id})">портфолио</md-button></div></md-card-content></md-card></div>'),
t.put("agglo-item/spec-list/spec-list.tpl.html",'<md-content md-scroll-y=""><div layout="row"><div flex="" flex-gt-md="50" offset-gt-md="25"><div ng-if="is_prg"><div ng-if="!rubric_data.is_loaded"><div layout="column" layout-align="center center"><md-progress-circular md-mode="indeterminate" class="md-hue-3"></md-progress-circular>загрузка категорий...</div></div></div><div ng-if="rubric_data.is_loaded"><ng-include src="\'agglo-item/spec-list/serv-groups.tpl.html\'"></ng-include></div></div></div></md-content>'),t.put("agglo-item/spec-item/spec-item.tpl.html",'<div class="full-height"><div ng-if="is_prg"><div ng-if="!cur_spec"><div layout="column" layout-align="center center"><md-progress-circular md-mode="indeterminate" class="md-hue-3"></md-progress-circular>загрузка специализации...</div></div></div><div class="full-height" ng-if="cur_spec"><div ng-if="is_show_rubrics"><md-tabs md-border-bottom="" md-selected="slc_rubric_index"><md-tab ng-repeat="rbrStat in cur_spec.arr_serv_rubric_stat" md-on-select="onTabSelected(rbrStat.serv_rubric.id)" label="{{rbrStat.serv_rubric.name}}"></md-tab></md-tabs></div><ui-view class="full-height" name="specItemContent"></ui-view></div></div>'),t.put("agglo-item/spec-item/rubric-item/master-detail.tpl.html",'<md-dialog aria-label="Информация о мастере"><md-dialog-content class="sticky-container" style="padding:0"><div ng-if="!master_data"><div layout="column" layout-align="center center"><md-progress-circular md-mode="indeterminate" class="md-hue-3"></md-progress-circular>загрузка...</div></div><md-toolbar class="md-whiteframe-z1" ng-if="master_data"><div class="md-toolbar-tools"><span ng-bind="master_data.slc_master.name"></span></div></md-toolbar><div ng-if="master_data"><div layout-margin="" layout-padding=""><div style="width: 100px; height: 100px; float: right; margin-left: 8px"><img style="width: 100px" ng-src="{{master_data.slc_master.master_user.avatar}}"></div><div><span ng-bind="master_data.slc_master.bio"></span></div></div><md-list style="clear: both"><md-list-item class="md-2-line"><div class="md-list-item-inner"><md-icon md-font-icon="fa fa-instagram fa-2x" style="margin-rigth:8px;"></md-icon><div class="md-list-item-text"><h3><a class="md-accent" aria-label="link to instagram" style="margin: 0; padding: 0" target="_blank" ng-href="https://instagram.com/{{master_data.slc_master.username}}">https://instagram.com/{{master_data.slc_master.username}}</a></h3><p>instagram (новая вкладка)</p></div><md-switch class="md-secondary" ng-show="false" ng-model="is_enabled"></md-switch></div></md-list-item><md-list-item class="md-2-line"><div class="md-list-item-inner"><md-icon md-font-icon="fa fa-globe fa-2x" style="margin-rigth:12px;"></md-icon><div class="md-list-item-text"><h3><a ng-if="master_data.slc_master.website" aria-label="link to instagram" style="margin: 0; padding:0" target="_blank" ng-href="{{master_data.slc_master.website}}"><span ng-bind="master_data.slc_master.website"></span></a> <span ng-if="!master_data.slc_master.website">нет данных</span></h3><p>веб-сайт (новая вкладка)</p></div><md-switch class="md-secondary" ng-show="false" ng-model="is_enabled"></md-switch></div></md-list-item></md-list></div></md-dialog-content></md-dialog>'),t.put("agglo-item/spec-item/rubric-item/rubric-item.tpl.html",'<div ng-if="cur_rubric_stat"><ng-include src="\'agglo-item/spec-item/rubric-item/serv-list.tpl.html\'"></ng-include></div><div ng-if="!cur_rubric_stat">все услуги</div>'),t.put("agglo-item/spec-item/rubric-item/serv-list.tpl.html",'<div ng-controller="ServListController"><div ng-if="!is_serv_loaded"><div layout="column" layout-align="center center"><md-progress-circular md-mode="indeterminate" class="md-hue-3"></md-progress-circular>загрузка портфолио...</div></div><div ng-if="is_serv_loaded"><div layout="column" layout-align="center center" ng-if="serv_data.arr_serv_info.length === 0">работ не найдено по данной специализации в вашем городе</div><md-grid-list md-cols-sm="1" md-cols-md="2" md-cols-lg="3" md-cols-gt-lg="4" md-row-height="1:1" md-gutter="4px"><md-grid-tile class="back-img" ng-if="servInfo.work_id" ng-repeat="servInfo in serv_data.arr_serv_info" on-finish-render="servListRepeatFinished" ng-style="{\'background-image\': \'url({{servInfo.work_preview_img}})\'}"><md-grid-tile-footer><h3 ng-bind="servInfo.master_name" style="text-shadow: #555 1px 1px, #555 -1px -1px, #555 -1px 1px, #555 1px -1px"></h3></md-grid-tile-footer><div style="position: absolute; right: 0; bottom: 2px"><md-button class="md-icon-button" aria-label="информация о мастере" ng-click="showMasterInfo($event, servInfo.master_serv.master_profile_id)"><md-icon md-font-icon="fa fa-info-circle fa-2x" style="color: #eee; width: 32px; height: 32px"></md-icon></md-button></div></md-grid-tile></md-grid-list><div layout="" layout-align="center center" ng-if="serv_data.is_more_exist"><md-button flex="" class="md-accent" ng-click="plusData()" ng-show="is_more_loaded">показать ещё...</md-button><div layout="column" layout-align="center center" ng-show="!is_more_loaded"><md-progress-circular md-mode="indeterminate" class="md-hue-3"></md-progress-circular>загрузка портфолио...</div></div></div></div>'),t.put("agglo-item/spec-item/salon-list/firm-detail.tpl.html",'<md-dialog aria-label="Информация о салоне"><md-dialog-content class="sticky-container" style="padding:0"><md-toolbar class="md-tall md-whiteframe-z1"><h2 class="md-toolbar-tools"><span ng-bind="firm_data.cur_firm.name"></span></h2><h3 class="md-toolbar-tools"><small><span ng-bind="firm_data.cur_firm.city_name"></span>, <span ng-bind="firm_data.cur_firm.address"></span></small></h3><md-button class="md-fab md-accent md-fab-bottom-right" aria-label="Вернуться на карту" title="Вернуться на карту" style="bottom: -40px" ng-click="hideDialog()"><md-icon md-font-icon="fa fa-map-marker fa-2x"></md-icon></md-button></md-toolbar><div><div ng-repeat="ctctGroup in firm_data.cur_firm.contacts"><md-list><md-list-item class="md-2-line contact-item" ng-repeat="ctct in ctctGroup.contacts"><div ng-if="ctct.type === \'phone\'" class="md-list-item-inner"><md-icon md-font-icon="fa fa-phone fa-2x"></md-icon><div class="md-list-item-text"><h3 ng-bind="ctct.value"></h3><p>телефон <span ng-bind="ctct.alias"></span> <span ng-bind="ctct.comment"></span></p></div><md-switch class="md-secondary" ng-show="false" ng-model="is_enabled"></md-switch></div><div ng-if="ctct.type === \'fax\'" class="md-list-item-inner"><md-icon md-font-icon="fa fa-fax fa-2x"></md-icon><div class="md-list-item-text"><h3 ng-bind="ctct.value"></h3><p>факс <span ng-bind="ctct.alias"></span> <span ng-bind="ctct.comment"></span></p></div></div><div class="md-list-item-inner" ng-if="ctct.type === \'email\'"><md-icon md-font-icon="fa fa-envelope fa-2x"></md-icon><div class="md-list-item-text"><h3 ng-bind="ctct.value"></h3><p>email <span ng-bind="ctct.alias"></span> <span ng-bind="ctct.comment"></span></p></div></div><div class="md-list-item-inner" ng-if="ctct.type === \'skype\'"><md-icon md-font-icon="fa fa-skype fa-2x"></md-icon><div class="md-list-item-text"><h3 ng-bind="ctct.value"></h3><p>Skype <span ng-bind="ctct.alias"></span> <span ng-bind="ctct.comment"></span></p></div></div><div class="md-list-item-inner" ng-if="ctct.type === \'icq\'"><md-icon md-font-icon="fa fa-comments fa-2x"></md-icon><div class="md-list-item-text"><h3 ng-bind="ctct.value"></h3><p>icq <span ng-bind="ctct.alias"></span> <span ng-bind="ctct.comment"></span></p></div></div><div class="md-list-item-inner" ng-if="ctct.type === \'jabber\'"><md-icon md-font-icon="fa fa-comments-o fa-2x"></md-icon><div class="md-list-item-text"><h3 ng-bind="ctct.value"></h3><p>jabber <span ng-bind="ctct.alias"></span> <span ng-bind="ctct.comment"></span></p></div></div><div class="md-list-item-inner" ng-if="ctct.type === \'website\'"><md-icon md-font-icon="fa fa-globe fa-2x"></md-icon><div class="md-list-item-text"><a target="_blank" ng-href="{{ctct.value}}"><span ng-bind="ctct.alias"></span></a><p>веб-сайт <span ng-bind="ctct.comment"></span></p></div></div><div class="md-list-item-inner" ng-if="ctct.type === \'vkontakte\'"><md-icon md-font-icon="fa fa-vk fa-2x"></md-icon><div class="md-list-item-text"><a target="_blank" ng-href="{{ctct.value}}"><span ng-bind="ctct.alias"></span></a><p>ВКонтакте <span ng-bind="ctct.comment"></span></p></div></div><div class="md-list-item-inner" ng-if="ctct.type === \'facebook\'"><md-icon md-font-icon="fa fa-facebook fa-2x"></md-icon><div class="md-list-item-text"><a target="_blank" ng-href="{{ctct.value}}"><span ng-bind="ctct.alias"></span></a><p>Facebook <span ng-bind="ctct.comment"></span></p></div></div><div class="md-list-item-inner" ng-if="ctct.type === \'instagram\'"><md-icon md-font-icon="fa fa-instagram fa-2x"></md-icon><div class="md-list-item-text"><a target="_blank" ng-href="{{ctct.value}}"><span ng-bind="ctct.alias"></span></a><p>Instagram <span ng-bind="ctct.comment"></span></p></div></div><div class="md-list-item-inner" ng-if="ctct.type === \'twitter\'"><md-icon md-font-icon="fa fa-twitter fa-2x"></md-icon><div class="md-list-item-text"><a target="_blank" ng-href="{{ctct.value}}"><span ng-bind="ctct.alias"></span></a><p>Twitter <span ng-bind="ctct.comment"></span></p></div></div></md-list-item></md-list></div></div><div ng-if="firm_data.cur_firm.article"><ng-include src="\'agglo-item/spec-item/salon-list/firm-rekl.tpl.html\'"></ng-include></div></md-dialog-content></md-dialog>'),t.put("agglo-item/spec-item/salon-list/firm-rekl.tpl.html",'<div layout-margin="" layout-padding=""><md-divider></md-divider><small style="color: gray">специальное предложение</small><div><h2 ng-if="firm_data.cur_firm.link"><md-button class="md-accent md-raised" aria-label="спец предложение" style="margin-left: 0" target="_blank" ng-href="{{firm_data.cur_firm.link.link}}"><span ng-bind="firm_data.cur_firm.link.text"></span></md-button></h2><h2 class="md-subhead" ng-if="!firm_data.cur_firm.link">Объявление</h2></div><p></p><p ng-if="firm_data.cur_firm.article"><span ng-bind-html="firm_data.cur_firm.article"></span></p><p ng-if="firm_data.cur_firm.fas_warning"><small ng-bind="firm_data.cur_firm.fas_warning"></small></p><p></p></div>'),t.put("agglo-item/spec-item/salon-list/salon-list.tpl.html",'<div class="full-height"><div class="padding text-center" ng-if="!map_center.lng">загрузка карты...<br><ion-spinner></ion-spinner></div><div class="full-height" ng-if="map_center.lng" data-tap-disabled="true"><leaflet class="my-map custom-popup" center="map_center" defaults="map_defaults" markers="firm_list_data.map_markers" event-broadcast="map_events" paths="map_paths"></leaflet><div style="top:4px; right:4px; position: absolute;"><div style="background: rgba(255,255,255,0.7); color: #333; padding: 0 5px;"><span ng-show="zurpos.zoom < 14" style="color:#dd0000">приблизьте карту для отображения меток</span> <span ng-show="zurpos.zoom >= 14"><span ng-show="firm_list_data.total > 0">салонов в радиусе 3км: <b ng-bind="firm_list_data.total"></b></span> <span ng-show="firm_list_data.total === 0">не найдено салонов на выбранной территории</span></span></div></div></div></div>')}]);
//# sourceMappingURL=data:application/json;base64,